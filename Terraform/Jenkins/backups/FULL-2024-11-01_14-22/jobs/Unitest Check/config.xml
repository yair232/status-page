<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1436.vfa_244484591f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>This unitest.py checks:&#xd;
&#xd;
1. manage.py: Ensures the file exists, is executable, and Django settings are correctly configured.&#xd;
2. upgrade.sh: Verifies the script exists, is executable, and checks for Python 3.10+.&#xd;
3. gunicorn.py: Confirms the file exists and validates its key configuration settings.</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3975.v567e2a_1ffa_22">
    <script>pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS_ID = &apos;github-ssh-key&apos;  // SSH key credential ID for GitHub
    }

    stages {
        stage(&apos;Clone Repository&apos;) {
            steps {
                script {
                    echo &quot;Cloning the Git repository...&quot;
                }
                git branch: &apos;main&apos;,
                    url: &apos;git@github.com:yair232/status-page.git&apos;,
                    credentialsId: &quot;${GITHUB_CREDENTIALS_ID}&quot;
            }
        }

        stage(&apos;Set Permissions&apos;) {
            steps {
                script {
                    echo &quot;Setting executable permissions...&quot;
                }
                sh &apos;&apos;&apos;
                chmod +x statuspage/manage.py
                chmod +x upgrade.sh
                &apos;&apos;&apos;
            }
        }

        stage(&apos;Install Dependencies&apos;) {
            steps {
                script {
                    echo &quot;Installing dependencies...&quot;
                }
                sh &apos;&apos;&apos;
                # Ensure Python and pip are installed
                python3 --version || sudo apt-get install python3
                pip3 --version || sudo apt-get install python3-pip
                
                # Install pytest
                pip3 install pytest
                &apos;&apos;&apos;
            }
        }

        stage(&apos;Run Unit Tests&apos;) {
            steps {
                script {
                    echo &quot;Running unit tests using pytest...&quot;
                }
                // Run the unit tests directly without changing directories
                sh &apos;&apos;&apos;
                pytest unitest.py
                &apos;&apos;&apos;
            }
        }
    }

    post {
        always {
            script {
                echo &quot;Cleaning up workspace...&quot;
            }
            cleanWs()
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>