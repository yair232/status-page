<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1436.vfa_244484591f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>After Thinbackup - Upload Git Pipeline</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3975.v567e2a_1ffa_22">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Git Pull with Rebase&apos;) {
            steps {
                script {
                    // Perform git pull with rebase to ensure the latest changes are pulled before proceeding
                    sh &apos;cd /var/lib/jenkins/status-page &amp;&amp; git pull --rebase origin main&apos;
                }
            }
        }

        stage(&apos;Run Backup Script&apos;) {
            steps {
                script {
                    // Execute your bash script to perform the backup
                    sh &apos;/var/lib/jenkins/backup-jenkins.sh&apos;
                }
            }
        }
    }

    post {
        success {
            echo &quot;Backup completed successfully.&quot;
        }
        failure {
            echo &quot;Backup failed. Please check the logs.&quot;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>